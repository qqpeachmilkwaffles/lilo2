def func2(arg5, arg6):
    var11 = func3(arg6, arg5)
    var15 = func4(arg6, var11)
    if arg6 < arg6:
        var20 = class6()
    else:
        var20 = class8()
    for var21 in [var11 + arg5 | var11 for i in range(11)]:
        var20.func7(var15, var21)
    var41 = func10(var15, arg5)
    var42 = -712282642 ^ var11 - var11 + var15
    var43 = (1390918658 - var15) & var15
    if arg6 < arg5:
        var44 = -760 | var43
    else:
        var44 = var42 & (-763293781 - var41)
    var45 = arg5 ^ (arg6 ^ arg5) - arg6
    var46 = ((var43 + var43) & var45) + var45
    var47 = var45 ^ arg5 + var45
    var48 = var46 & var41 | (var11 | var15)
    var49 = (var47 - var46) ^ -1058221380 - var43
    var50 = -862 - var11 | var45
    var51 = var46 & var41
    result = var43 | var15 + var11
    return result
def func10(arg22, arg23):
    var24 = -2025178013 | 148
    if arg22 < arg22:
        var25 = (-740 - -754 - -988) + -1387462014
    else:
        var25 = 1520596364 + arg23
    var26 = ((arg23 - arg23) - var24) & 1165836691
    var27 = var24 ^ -444
    var28 = var24 & var26
    var29 = 342 ^ arg22 + 1090869085
    var30 = var27 | var27
    var31 = (var24 & var30) ^ arg22 ^ var24
    var32 = ((-356627676 | -235) - var27) - 1232200206
    var33 = 422 & (var27 | var31) - var24
    var34 = var33 ^ var33
    var35 = var28 | var31 + var28 | var29
    var36 = ((var28 ^ var32) + 346) | var30
    var37 = (var28 - var31 - arg23) + var33
    if var31 < var32:
        var38 = var31 ^ (var33 + var28) + arg22
    else:
        var38 = var30 & var24 - var30 ^ var29
    if var24 < var29:
        var39 = (var26 & 598 + var27) & var30
    else:
        var39 = var35 ^ (var24 - var37) - var28
    var40 = var37 - (var27 + (var34 & var32))
    result = arg22 - -1611273148
    return result
class class8(object):
    def func7(self, arg18, arg19):
        return 0
class class6(object):
    def func7(self, arg16, arg17):
        result = -656738670 + -665591518 - ((0 | arg17) & 2060601446)
        return result
def func3(arg7, arg8):
    var9 = 0
    for var10 in range(11):
        var9 += var9 & var9
    return var9
def func1(arg1, arg2):
    var3 = ((arg1 + -907943540 + 1879092490) ^ (1370961671 ^ ((arg2 ^ (arg1 | (290 - 702) + arg2)) - 858 + arg2 - (arg2 ^ -94712327 - (arg1 - arg1)) + arg1 ^ (arg1 + arg1) | -485)) | -1035817712) - 351243438
    var4 = 1035445341 + ((var3 | var3) + ((((var3 - var3 ^ (620 | (((var3 ^ ((var3 | (var3 ^ 101) ^ arg1 | var3 + arg2) | (arg2 | -450230532)) & -1531719915 - arg2) ^ arg1) & var3))) + 120) & -116) ^ var3))
    result = (-403759411 + var3) | (-567 & -897 - 888846682)
    return result
def func4(arg12, arg13):
    closure = [0]
    def func5(acc, rest):
        var14 = ((rest | closure[0] ^ -7) + -7) - (rest & rest) + -10
        closure[0] += var14
        if acc == 0:
            return var14
        else:
            result = func5(acc - 1, var14)
            return result
    result = func5(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 0'
    print 'func_number: 2'
    print 'arg_number: 5'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 11'
    print 'arg_number: 52'
    for i in xrange(25000):
        x = 5
        x = func2(x, i)
        print x,
